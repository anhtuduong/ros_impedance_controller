<?xml version="1.0" ?>
<launch>
        <arg name="robot_name" default="ur5" />
        <arg name="rviz" default="true" />
        <arg name="gui" default="true" />
        <arg name="rviz_conf" default="$(find ros_impedance_controller)/config/operator.rviz"/>
	<arg name="task_period" default="0.004" />
	<arg name="gazebo" value="true" />
	<arg name="gazebo_world" default="worlds/empty.world" doc="The '.world' file to load in Gazebo." />
	<arg name="spawn_z" value="1.1" />

        <!-- load robot name into param server-->
        <param name="robot_name" type="str" value="$(arg robot_name)" />
        <param name="spawn_z" type="double" value="$(arg spawn_z)" />

         <!-- 1 - load the robot URDF as robot_description into param server (this will have to contain ros_control plugin and transmissions) -->
          <arg name="joint_limit_params" default="$(find ur_description)/config/ur5e/joint_limits.yaml"/>
          <arg name="kinematics_params" default="$(find ur_description)/config/ur5e/default_kinematics.yaml"/>
          <arg name="physical_params" default="$(find ur_description)/config/ur5e/physical_parameters.yaml"/>
          <arg name="visual_params" default="$(find ur_description)/config/ur5e/visual_parameters.yaml"/>
          <include file="$(find ur_description)/launch/load_ur5e.launch">
            <arg name="gazebo" value="$(arg gazebo)" />
            <arg name="joint_limit_params" value="$(arg joint_limit_params)"/>
            <arg name="kinematics_params" value="$(arg kinematics_params)"/>
            <arg name="physical_params" value="$(arg physical_params)"/>
            <arg name="visual_params" value="$(arg visual_params)"/>
          </include>

     	<!-- 2 launch gzserver (with empty world)/ gzcclient: Starts Gazebo and load the empty world if requested to do so - -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch" >
		<arg name="world_name" value="$(arg gazebo_world)"/>
                <arg name="paused" default="false" />
                <arg name="use_sim_time" default="true" />
                <arg name="gui" value="$(arg gui)" />
                <arg name="headless" default="false" />
                <arg name="debug" default="false" />
                <arg name="verbose" value="true" />
        </include>

        <!-- 3 Spawn a robot (described in robot_description) into Gazebo -->
        <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model ur5 -z $(arg spawn_z)"/>

	<!-- 4 -Loading  controllers settings -->
	<rosparam file="$(find ros_impedance_controller)/config/joint_state_publisher.yaml" ns="/$(arg robot_name)" command="load"/> 		
	<rosparam file="$(find ros_impedance_controller)/config/ros_impedance_controller_ur5.yaml" ns="/$(arg robot_name)" command="load"/>>
	<rosparam file="$(find ur_description)/config/ur5e/ur5e_controllers.yaml" ns="/$(arg robot_name)" command="load"/>

        <!-- 5  - Loading the controllers (joint state publisher (install ros-kinetic-joint-state-controller) is necessary for robot_state publisher to compute the TFs) -->
        <node name="ros_impedance_controller" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/$(arg robot_name)"  args="joint_state_publisher ros_impedance_controller"/>

        <!--  rviz stuff -->
        <!-- 6- load robot_state_publisher: converts joint states to TF transforms, it is just for rviz, etc -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
		 <remap from="/joint_states" to="/$(arg robot_name)/joint_states"/> 
	</node>
        <!-- 7 run rviz -->
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_conf) -f world" if="$(arg rviz)"/>
</launch>

